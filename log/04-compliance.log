
R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #===============================================================================
> #  File:    04-compliance.R
> #  Date:    Feb 3, 2021
> #  Purpose: replicate appendix analyses: compliance
> #  Data In: 
> #           ./data/survey_data.csv
> #           ./data/daily_pulse_data.csv
> #===============================================================================
> 
> # PACKAGES
> #===============================================================================
> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
✔ ggplot2 3.3.2     ✔ purrr   0.3.4
✔ tibble  3.0.6     ✔ dplyr   1.0.3
✔ tidyr   1.1.2     ✔ stringr 1.4.0
✔ readr   1.4.0     ✔ forcats 0.5.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
> library(dplyr)
> library(ggplot2)
> library(reshape2)

Attaching package: ‘reshape2’

The following object is masked from ‘package:tidyr’:

    smiths

> library(ivdesc)
> library(lemon)

Attaching package: ‘lemon’

The following object is masked from ‘package:purrr’:

    %||%

The following objects are masked from ‘package:ggplot2’:

    CoordCartesian, element_render

> 
> # DATA
> #===============================================================================
> pulse <- read_csv("data/daily_pulse_data.csv")

── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_double(),
  id = col_character(),
  date = col_date(format = "")
)
ℹ Use `spec()` for the full column specifications.

> svy <- read_csv("data/survey_data.csv")

── Column specification ────────────────────────────────────────────────────────
cols(
  .default = col_double(),
  id = col_character(),
  partylean = col_character(),
  raceeth = col_character(),
  employ = col_character(),
  W1_endtime = col_datetime(format = ""),
  W2_endtime = col_datetime(format = ""),
  W3_PATA306_treatment_w3 = col_character(),
  W3_Browser_treatment_w3 = col_character(),
  starttime_w3 = col_datetime(format = ""),
  endtime_w3 = col_datetime(format = ""),
  endtime = col_datetime(format = ""),
  W5_endtime = col_datetime(format = ""),
  W6_endtime = col_datetime(format = ""),
  endtime_w7 = col_datetime(format = ""),
  endtime_w8 = col_datetime(format = ""),
  predicted_house_winner_gop = col_logical(),
  predicted_district_winner_gop = col_logical(),
  predicted_house_winner_dem = col_logical(),
  predicted_district_winner_dem = col_logical()
)
ℹ Use `spec()` for the full column specifications.

> 
> # COMPLIANCE: results reported in appendix
> #===============================================================================
> 
> # Compliance according to pre-registered metric - Fox News
> # Always takers
> svy %>% 
+   filter(W3_PATA306_treatment_w3=="Control") %>% 
+   summarise(mean(comp_fn, na.rm=TRUE))
# A tibble: 1 x 1
  `mean(comp_fn, na.rm = TRUE)`
                          <dbl>
1                        0.0464
> # Treated
> svy %>% 
+   filter(W3_PATA306_treatment_w3=="FoxNews") %>% 
+   summarise(mean(comp_fn, na.rm=TRUE))
# A tibble: 1 x 1
  `mean(comp_fn, na.rm = TRUE)`
                          <dbl>
1                         0.336
> 
> # Compliance according to pre-registered metric - GHuffPost
> # Always takers
> svy %>% 
+   filter(W3_PATA306_treatment_w3=="Control") %>% 
+   summarise(mean(comp_hp, na.rm=TRUE))
# A tibble: 1 x 1
  `mean(comp_hp, na.rm = TRUE)`
                          <dbl>
1                        0.0211
> # Treated
> svy %>% 
+   filter(W3_PATA306_treatment_w3=="HuffPost") %>% 
+   summarise(mean(comp_hp, na.rm=TRUE))
# A tibble: 1 x 1
  `mean(comp_hp, na.rm = TRUE)`
                          <dbl>
1                         0.300
> 
> # Figure 7
> #===============================================================================
> 
> # deleting missing web tracking data
> svy <- svy %>% filter(!is.na(log_fn_6w) & !is.na(log_fn_pre)) %>% 
+   mutate(fn_6w = exp(log_fn_6w) - 1,
+          fn_pre = exp(log_fn_pre) - 1,
+          hp_6w = exp(log_hp_6w) - 1,
+          hp_pre = exp(log_hp_pre) - 1)
> 
> # descriptive statistics: change in number of visits
> svy %>% group_by(W3_PATA306_treatment_w3) %>% 
+   summarise(fn_increase = mean(fn_6w>fn_pre, na.rm=TRUE),
+             hp_increase = mean(hp_6w>hp_pre, na.rm=TRUE))
# A tibble: 3 x 3
  W3_PATA306_treatment_w3 fn_increase hp_increase
* <chr>                         <dbl>       <dbl>
1 Control                       0.161      0.108 
2 FoxNews                       0.569      0.0791
3 HuffPost                      0.134      0.5   
> 
> ### From respondents with 0 visits to FN or HP before treatment,
> ####### 35% of those in FNC group visited FN
> ####### 23% of those in HP group visited HP
> svy %>% group_by(W3_PATA306_treatment_w3) %>% 
+   summarise(fn_increase_from_zero = sum(
+     fn_6w>0 & fn_pre==0, na.rm=TRUE)/
+       sum(fn_pre==0, na.rm=TRUE),
+     hp_increase_from_zero = sum(
+       hp_6w>0 & hp_pre==0, na.rm=TRUE)/
+       sum(hp_pre==0, na.rm=TRUE))
# A tibble: 3 x 3
  W3_PATA306_treatment_w3 fn_increase_from_zero hp_increase_from_zero
* <chr>                                   <dbl>                 <dbl>
1 Control                                0.109                 0.0813
2 FoxNews                                0.354                 0.0566
3 HuffPost                               0.0942                0.229 
> 
> ### The treatment increase number of visits by at least 10x for
> ####### 35% of the FN treatment group
> ####### 30% of the HP treatment group
> svy %>% group_by(W3_PATA306_treatment_w3) %>% 
+   summarise(fn_increase = mean(fn_6w>fn_pre*10, na.rm=TRUE),
+             hp_increase = mean(hp_6w>hp_pre*10, na.rm=TRUE))
# A tibble: 3 x 3
  W3_PATA306_treatment_w3 fn_increase hp_increase
* <chr>                         <dbl>       <dbl>
1 Control                      0.0884      0.0683
2 FoxNews                      0.348       0.0474
3 HuffPost                     0.0787      0.299 
> 
> ## graph with compliance
> fn_n <- sum(svy$W3_PATA306_treatment_w3 == "FoxNews")
> control_n <- sum(svy$W3_PATA306_treatment_w3 == "Control")
> hp_n <- sum(svy$W3_PATA306_treatment_w3 == "HuffPost")
> 
> svy <- svy %>% 
+   mutate(fn_change = fn_6w - fn_pre,
+          hp_change = hp_6w - hp_pre)
> df <- data.frame(
+   x = rep(c(1:hp_n, 1:fn_n, 1:control_n),times=2),
+   value = c(
+     sort(svy$fn_change[svy$W3_PATA306_treatment_w3 == "HuffPost"], na.last = FALSE),
+     sort(svy$fn_change[svy$W3_PATA306_treatment_w3 == "FoxNews"], na.last = FALSE),
+     sort(svy$fn_change[svy$W3_PATA306_treatment_w3 == "Control"], na.last = FALSE),
+     sort(svy$hp_change[svy$W3_PATA306_treatment_w3 == "HuffPost"], na.last = FALSE),
+     sort(svy$hp_change[svy$W3_PATA306_treatment_w3 == "FoxNews"], na.last = FALSE),
+     sort(svy$hp_change[svy$W3_PATA306_treatment_w3 == "Control"], na.last = FALSE)
+   ),
+   outlet = rep(c("FoxNews", "HuffPost"), each=nrow(svy)),
+   group = rep(c(rep("HuffPost", hp_n), rep("FoxNews", fn_n), 
+                 rep("Control", control_n)), times=2)
+ )
> 
> p <- ggplot(df, aes(x=x, y=value, color=group))
> pq <- p + geom_point(size=.75) +
+   facet_wrap( ~ outlet, scales="free_y") +
+   theme_bw() +
+   scale_x_continuous(
+     "Respondents (from lowest to highest change in visit count)") +
+   scale_y_continuous("Change in visits to news domain",
+                      limits=c(-200, 500)) +
+   theme(legend.position = "bottom", 
+         axis.ticks.x = element_blank(),
+         axis.text.x = element_blank()) +
+   scale_color_manual("Treatment group", 
+                      values = c("gray80", "red", "darkgreen"))
> pq
Warning message:
Removed 25 rows containing missing values (geom_point). 
> 
> ggsave(pq, file="graphs/appendix_fig7.pdf", height=4, width=6.5)
Warning message:
Removed 25 rows containing missing values (geom_point). 
> ggsave(pq, file="graphs/appendix_fig7.png", height=4, width=6.5)
Warning message:
Removed 25 rows containing missing values (geom_point). 
> 
> # outliers excluded from graph
> table(df$value>500, df$outlet)
       
        FoxNews HuffPost
  FALSE     737      755
  TRUE       19        1
> table(df$value<(-200), df$outlet)
       
        FoxNews HuffPost
  FALSE     751      756
  TRUE        5        0
> 
> # Figure 8
> #===============================================================================
> 
> # Merge pulse data with survey data
> pulse <- merge(pulse, 
+                dplyr::select(svy, id, W3_PATA306_treatment_w3, starttime_w3, W3_Browser_treatment_w3),
+                by.x = "id", by.y = "id", all.x = TRUE) %>%
+   mutate(treatment = factor(W3_PATA306_treatment_w3, 
+                             labels = c("Control group", "Fox News group", "HuffPost group")),
+          starttime_w3 = as.Date(starttime_w3),
+          timing = as.numeric(date - as.Date("2018-10-05"))) %>%
+   as_tibble()
> 
> # Create plot data
> plot_data <- pulse %>% 
+   filter(!is.na(treatment)) %>% # dropping those who are not part of the experiment: NA
+   filter(date!="2018-11-19" & date!= "2018-11-18") %>% # drop the data from 2018-11-19 because of missing data
+   filter(date >= as.Date("2018-09-01") & timing <= 50) %>%   
+   group_by(date, treatment) %>% 
+   summarize(mean = mean(log_fn_day),
+             se = sd(log_fn_day)/sqrt(n()))
`summarise()` has grouped output by 'date'. You can override using the `.groups` argument.
> 
> p_fn <- plot_data %>%
+   ggplot(aes(date, mean, color = treatment, group=treatment)) +
+   scale_y_continuous("Average count of FoxNews.com visits per day (log; 95% CIs)") +
+   geom_linerange(aes(ymin=mean-1*se, ymax=mean+1*se, color=treatment), size=1) +
+   geom_linerange(aes(ymin=mean-2*se, ymax=mean+2*se, color=treatment)) +
+   scale_color_manual("Treatment group", values = c("darkgray", "red", "blue")) + 
+   geom_vline(xintercept = as.Date("2018-10-05"), lty = 2) +
+   geom_hline(yintercept = 0, alpha=.5) +
+   ggtitle("Change in visits to FoxNews.com per day after treatment") +
+   facet_grid(treatment~.) +
+   theme_bw() +
+   theme(legend.position = "bottom", axis.title.x = element_blank())
> 
> ggsave(p_fn, file="graphs/appendix_fig8.pdf", height=5, width=8)
> ggsave(p_fn, file="graphs/appendix_fig8.png", height=5, width=8)
> 
> 
> # Figure 9
> #===============================================================================
> 
> plot_data <- pulse %>% 
+   filter(!is.na(treatment)) %>% # dropping those who are not part of the experiment: NA
+   filter(date!="2018-11-19" & date!= "2018-11-18") %>% # drop the data from 2018-11-19 because of missing data
+   filter(date >= as.Date("2018-09-01") & timing <= 50) %>%   
+   group_by(date, treatment) %>% 
+   summarize(mean = mean(log_hp_day),
+             se = sd(log_hp_day)/sqrt(n()))
`summarise()` has grouped output by 'date'. You can override using the `.groups` argument.
> 
> p_hp <- plot_data %>%
+   ggplot(aes(date, color = treatment, group=treatment)) +
+   scale_y_continuous("Average count of HuffingPost.com visits per day (log; 95% CIs)") +
+   geom_linerange(aes(ymin=mean-1*se, ymax=mean+1*se, color=treatment), size=1) +
+   geom_linerange(aes(ymin=mean-2*se, ymax=mean+2*se, color=treatment)) +
+   scale_color_manual("Treatment group", values = c("darkgray", "red", "blue")) + 
+   geom_vline(xintercept = as.Date("2018-10-05"), lty = 2) +
+   geom_hline(yintercept = 0, alpha=.5) +
+   ggtitle("Change in visits to HuffPost.com per day after treatment") +
+   facet_grid(treatment~.) +
+   theme_bw() +
+   theme(legend.position = "bottom", axis.title.x = element_blank())
> 
> ggsave(p_hp, file="graphs/appendix_fig9.pdf", height=5, width=8)
> ggsave(p_hp, file="graphs/appendix_fig9.png", height=5, width=8)
> 
> 
> # Figure 12
> #===============================================================================
> 
> # import survey data
> svy_recoded <- svy %>% 
+   mutate(ideo3 = factor(case_when(
+     ideo %in% c(1, 2) ~ 'liberal',
+     ideo == 3 ~ 'moderate',
+     ideo %in% c(4, 5) ~ 'conservative',
+   ), levels=c("moderate", "liberal", "conservative")),
+   educ3 = factor(case_when(
+     educ %in% c(1,2) ~ 'HS or less',
+     educ %in% c(3,4) ~ 'Some college',
+     educ %in% c(5,6) ~ 'College',
+   ), levels=c('Some college', 'HS or less', 'College')))
> 
> # compliance with Fox News treatment
> summary(reg1 <- lm(log_fn_4w ~ log_news_pre + log_fn_pre + log_hp_pre + ideo3 + I(age>=60) + 
+                      female + educ3 + I(polint==4) + I(income>=8), 
+                    data=svy_recoded %>% filter(W3_PATA306_treatment_w3 == "FoxNews")))

Call:
lm(formula = log_fn_4w ~ log_news_pre + log_fn_pre + log_hp_pre + 
    ideo3 + I(age >= 60) + female + educ3 + I(polint == 4) + 
    I(income >= 8), data = svy_recoded %>% filter(W3_PATA306_treatment_w3 == 
    "FoxNews"))

Residuals:
    Min      1Q  Median      3Q     Max 
-4.1748 -1.0346 -0.4384  1.1432  4.7504 

Coefficients:
                   Estimate Std. Error t value Pr(>|t|)    
(Intercept)         0.32081    0.36809   0.872   0.3845    
log_news_pre        0.08816    0.06947   1.269   0.2058    
log_fn_pre          0.75354    0.09822   7.672 6.36e-13 ***
log_hp_pre          0.08925    0.13396   0.666   0.5060    
ideo3liberal        0.07613    0.30129   0.253   0.8008    
ideo3conservative   0.56514    0.29697   1.903   0.0584 .  
I(age >= 60)TRUE    0.39127    0.23401   1.672   0.0960 .  
female              0.02522    0.23408   0.108   0.9143    
educ3HS or less     0.18669    0.34294   0.544   0.5868    
educ3College        0.22500    0.24823   0.906   0.3658    
I(polint == 4)TRUE -0.09240    0.26354  -0.351   0.7262    
I(income >= 8)TRUE  0.28461    0.23813   1.195   0.2334    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 1.631 on 209 degrees of freedom
  (32 observations deleted due to missingness)
Multiple R-squared:  0.4221,	Adjusted R-squared:  0.3917 
F-statistic: 13.88 on 11 and 209 DF,  p-value: < 2.2e-16

> 
> # compliance with Huffington Post treatment
> summary(reg2 <- lm(log_hp_4w ~ log_news_pre + log_fn_pre + log_hp_pre + ideo3 + I(age>=60) + 
+                      female + educ3 + I(polint==4) + I(income>=8), 
+                    data=svy_recoded %>% filter(W3_PATA306_treatment_w3 == "HuffPost")))

Call:
lm(formula = log_hp_4w ~ log_news_pre + log_fn_pre + log_hp_pre + 
    ideo3 + I(age >= 60) + female + educ3 + I(polint == 4) + 
    I(income >= 8), data = svy_recoded %>% filter(W3_PATA306_treatment_w3 == 
    "HuffPost"))

Residuals:
    Min      1Q  Median      3Q     Max 
-3.0759 -0.8637 -0.3660  0.8572  3.3071 

Coefficients:
                    Estimate Std. Error t value Pr(>|t|)    
(Intercept)         0.409155   0.332907   1.229   0.2204    
log_news_pre        0.067398   0.048913   1.378   0.1697    
log_fn_pre          0.107199   0.072028   1.488   0.1382    
log_hp_pre          1.154813   0.091237  12.657   <2e-16 ***
ideo3liberal       -0.499763   0.206897  -2.416   0.0166 *  
ideo3conservative  -0.387867   0.226000  -1.716   0.0876 .  
I(age >= 60)TRUE    0.165052   0.174783   0.944   0.3461    
female              0.371998   0.177186   2.099   0.0370 *  
educ3HS or less    -0.008472   0.255168  -0.033   0.9735    
educ3College        0.089138   0.190189   0.469   0.6398    
I(polint == 4)TRUE -0.076360   0.192432  -0.397   0.6919    
I(income >= 8)TRUE  0.149677   0.183429   0.816   0.4154    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 1.226 on 211 degrees of freedom
  (31 observations deleted due to missingness)
Multiple R-squared:  0.5118,	Adjusted R-squared:  0.4863 
F-statistic: 20.11 on 11 and 211 DF,  p-value: < 2.2e-16

> 
> vars <- c("Intercept", "Pre-treatment visits\nto news sites (log)",
+           "Pre-treatment visits\nto Fox News (log)",
+           "Pre-treatment visits\nto HuffPost (log)",
+           "Ideology = Liberal", "Ideology = Conservative",
+           "Age >= 60", "Gender = female", "Educ: HS or less",
+           "Educ: 4-year college or more", 
+           "Political interest = very high", "Above median hh income")
> 
> # graph with estimated coefficients
> df <- data.frame(
+   coef = c(coef(reg1), coef(reg2)),
+   se = c(sqrt(diag(vcov(reg1))), sqrt(diag(vcov(reg2)))),
+   var = c(names(coef(reg1)), names(coef(reg2))),
+   var_label = rep(vars, times=2),
+   outcome = rep(c("Fox News treatment group", 
+                   "HuffPost treatment group"), each=length(coef(reg1))),
+   stringsAsFactors=FALSE
+ )
> df$var_label <- factor(df$var_label, levels=rev(vars))
> 
> p <- ggplot(df, aes(x=var_label, y=coef, color=outcome))
> pq <- p + coord_flip() +
+   geom_point() +
+   # adding first (long, thin) line for coef +- 2 sd
+   geom_linerange(aes(ymin=coef-1.96*se, ymax=coef+1.96*se, color=outcome)) +
+   # adding second (short, thick) line for coef +- 1 sd
+   geom_linerange(aes(ymin=coef-se, ymax=coef+se, color=outcome), size=1) +
+   facet_grid(~outcome) +
+   scale_color_manual("Treatment group", values = c("red", "blue")) +
+   ggtitle("DV = log visits to Fox News/HuffPost, during 4 weeks after encouragement") +
+   theme_bw() +
+   scale_y_continuous("Estimated % increase in visits during four weeks after encouragement") +
+   theme(legend.position = "none", axis.title.y = element_blank()) +
+   geom_hline(yintercept=0, linetype=5, color="grey50")
> 
> 
> ggsave(pq, file="graphs/appendix_fig12.pdf", height=5.5, width=8)
> ggsave(pq, file="graphs/appendix_fig12.png", height=5.5, width=8)
> 
> # Figure 13
> #===============================================================================
> 
> ## prepare data ------------------------------
> svy <- svy %>% 
+   mutate(ideo3 = factor(case_when(
+     ideo %in% c(1, 2) ~ 'liberal',
+     ideo == 3 ~ 'moderate',
+     ideo %in% c(4, 5) ~ 'conservative',
+   ), levels=c("moderate", "liberal", "conservative")),
+   educ3 = factor(case_when(
+     educ %in% c(1,2) ~ 'HS or less',
+     educ %in% c(3,4) ~ 'Some college',
+     educ %in% c(5,6) ~ 'College',
+   ), levels=c('Some college', 'HS or less', 'College')))
> 
> # recode treatment variable
> svy$assignment_fn <- ifelse(svy$W3_PATA306_treatment_w3 == "FoxNews", 1, 0)
> svy$assignment_hp <- ifelse(svy$W3_PATA306_treatment_w3 == "HuffPost", 1, 0)
> svy$assignment_ct <- ifelse(svy$W3_PATA306_treatment_w3 == "Control", 1, 0)
> 
> # prepare covars
> covar_names <- c("log_news_pre", "log_fn_pre", "log_hp_pre", 
+                  "I(ideo3 == 'liberal')", "I(ideo3 == 'conservative')",
+                  "I(age>=60)", "female", 
+                  "I(educ3 == 'HS or less')", "I(educ3 == 'College')", 
+                  "I(polint==4)", "I(income>=8)")
> 
> covar_names_labels <- c("Pre-treatment visits to:\n News sites (log)",
+                         "Pre-treatment visits to:\n Fox News (log)",
+                         "Pre-treatment visits to:\n HuffPost (log)",
+                         "Ideology:\nLiberal", "Ideology:\nConservative",
+                         "Age:\n60+", "Gender:\nFemale", "Education:\nHS or less",
+                         "Education:\n4-year college or more", 
+                         "Political interest:\nVery high", "Household income:\nAbove median")
> 
> 
> 
> ## run FN treatment models ------------------------------
> 
> # keep only FN assignment + controls
> dat <- filter(svy, assignment_fn == 1 | assignment_ct == 1)
> 
> # loop
> out_list <- list()
> for (i in seq_along(covar_names)) {
+   out_list[[i]] <- with(dat, ivdesc(X = eval(parse(text = covar_names[i])), 
+                                     D = comp_fn, 
+                                     Z = assignment_fn),
+                         boot = TRUE, bootn = 3000) %>%
+     as.data.frame()
+   out_list[[i]]$covar <- covar_names[i]
+   out_list[[i]]$covar_label <- covar_names_labels[i]
+   print(paste0(i, "..."))
+ }
[1] "1..."
[1] "2..."
[1] "3..."
[1] "4..."
[1] "5..."
[1] "6..."
[1] "7..."
[1] "8..."
[1] "9..."
[1] "10..."
[1] "11..."
Warning messages:
1: In ivdesc(X = eval(parse(text = covar_names[i])), D = comp_fn, Z = assignment_fn) :
  X coerced to numeric.
2: In ivdesc(X = eval(parse(text = covar_names[i])), D = comp_fn, Z = assignment_fn) :
  X coerced to numeric.
3: In ivdesc(X = eval(parse(text = covar_names[i])), D = comp_fn, Z = assignment_fn) :
  X coerced to numeric.
4: In ivdesc(X = eval(parse(text = covar_names[i])), D = comp_fn, Z = assignment_fn) :
  X coerced to numeric.
5: In ivdesc(X = eval(parse(text = covar_names[i])), D = comp_fn, Z = assignment_fn) :
  X coerced to numeric.
6: In ivdesc(X = eval(parse(text = covar_names[i])), D = comp_fn, Z = assignment_fn) :
  X coerced to numeric.
7: In ivdesc(X = eval(parse(text = covar_names[i])), D = comp_fn, Z = assignment_fn) :
  X coerced to numeric.
> out_df_fn <- bind_rows(out_list)
> out_df_fn$treatment <- "Fox News"
> 
> 
> ## run HP treatment models ------------------------------
> 
> # keep only HP assignment + controls
> dat <- filter(svy, assignment_hp == 1 | assignment_ct == 1)
> 
> # loop
> out_list <- list()
> for (i in seq_along(covar_names)) {
+   out_list[[i]] <- with(dat, ivdesc(X = eval(parse(text = covar_names[i])), 
+                                     D = comp_hp, 
+                                     Z = assignment_hp),
+                         boot = TRUE, bootn = 3000) %>%
+     as.data.frame()
+   out_list[[i]]$covar <- covar_names[i]
+   out_list[[i]]$covar_label <- covar_names_labels[i]
+   print(paste0(i, "..."))
+ }
[1] "1..."
[1] "2..."
[1] "3..."
[1] "4..."
[1] "5..."
[1] "6..."
[1] "7..."
[1] "8..."
[1] "9..."
[1] "10..."
[1] "11..."
Warning messages:
1: In ivdesc(X = eval(parse(text = covar_names[i])), D = comp_hp, Z = assignment_hp) :
  X coerced to numeric.
2: In ivdesc(X = eval(parse(text = covar_names[i])), D = comp_hp, Z = assignment_hp) :
  X coerced to numeric.
3: In ivdesc(X = eval(parse(text = covar_names[i])), D = comp_hp, Z = assignment_hp) :
  X coerced to numeric.
4: In ivdesc(X = eval(parse(text = covar_names[i])), D = comp_hp, Z = assignment_hp) :
  X coerced to numeric.
5: In ivdesc(X = eval(parse(text = covar_names[i])), D = comp_hp, Z = assignment_hp) :
  X coerced to numeric.
6: In ivdesc(X = eval(parse(text = covar_names[i])), D = comp_hp, Z = assignment_hp) :
  X coerced to numeric.
7: In ivdesc(X = eval(parse(text = covar_names[i])), D = comp_hp, Z = assignment_hp) :
  X coerced to numeric.
> out_df_hp <- bind_rows(out_list)
> out_df_hp$treatment <- "Huffington Post"
> 
> 
> ## plot outcomes ---------------------------
> 
> # join data frames
> out_df <- bind_rows(out_df_fn, out_df_hp)
> 
> # re-define group variable
> out_df$group_label <- recode_factor(out_df$group, sample = "Sample", 
+                                     co = "Compliers", nt = "Never-takers", 
+                                     at = "Always-takers")
> out_df$covar_label <- factor(out_df$covar_label, levels = covar_names_labels)
> 
> # plot
> p <- ggplot(out_df, aes(group_label, mu, color = treatment)) + 
+   geom_pointrange(aes(ymin = mu - 1.96*mu_se, ymax = mu + 1.96*mu_se), shape = 19, fatten = 1, size = 0.75, stat="identity", position = position_dodge(0.5)) + 
+   geom_pointrange(aes(ymin = mu - 1*mu_se, ymax = mu + 1*mu_se), shape = 19, fatten = 1, size = 1, stat="identity", position = position_dodge(0.5)) + 
+   facet_rep_wrap(~ covar_label,  scales='free_x', repeat.tick.labels = 'none', ncol = 3) +
+   coord_flip() + 
+   #theme_ipsum() + 
+   scale_color_manual(values = c("red", "blue")) + 
+   labs(y = substitute(y, list(y = "\nMean and 68%/95% confidence intervals"))) + 
+   theme(panel.background = element_blank(), 
+         axis.title.x = element_text(hjust = 0.5, size = 12), 
+         axis.title.y = element_blank(), 
+         axis.text = element_text(size = 12), 
+         plot.caption = element_text(size = 7), 
+         strip.text.x = element_text(size = 12, colour = "black"),
+         plot.margin=unit(c(0.1,0.1,0.1,0.1), "cm"),
+         panel.spacing = unit(0.25, "cm"),
+         legend.position="bottom",
+         legend.title = element_blank(),
+         legend.key.size = unit(1, "line"),
+         panel.border = element_rect(colour = "black", fill = NA))
> 
> ggsave("graphs/appendix_fig13.pdf", height = 5, width = 4, dpi = 300, scale = 2)
> ggsave("graphs/appendix_fig13.png", height = 5, width = 4, dpi = 300, scale = 2)
> 
> proc.time()
   user  system elapsed 
 23.042   0.605  24.073 
